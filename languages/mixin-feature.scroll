title Mixins

import settings.scroll
htmlTitle Mixins - Language feature

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/mixin-feature.pldb

paragraph
 Mixins are a <a href="../lists/features.html">language feature</a>.









paragraph
 A mixin is a class that contains methods for use by other classes without having to be the parent class of those other classes. How those other classes gain access to the mixin's methods depends on the language. Mixins are sometimes described as being "included" rather than "inherited". A mixin can also be viewed as an interface with implemented methods.

list
 - the <a href="https://en.wikipedia.org/wiki/Mixin">Mixins Wikipedia page</a>
 - Have a question about Mixins not answered here? <a href="https://github.com/breck7/pldb/issues/new">Open an issue</a> explaining what you need.
 - <a href="https://edit.pldb.com/edit/mixin-feature">Edit this page</a>

html
 <br>

paragraph
 Languages <b>with</b> Mixins include <a href="python.html">Python</a>, <a href="ruby.html">Ruby</a>, <a href="typescript.html">TypeScript</a>, <a href="julia.html">Julia</a>, <a href="racket.html">Racket</a>, <a href="xtext.html">Xtext</a>

exampleCodeHeader Example from <a href="python.html">Python</a>:

code
 # https://easyaspython.com/mixins-for-fun-and-profit-cb9962760556
 class EssentialFunctioner(LoggerMixin, object):

exampleCodeHeader Example from <a href="ruby.html">Ruby</a>:

code
 module A
    def a1
    end
    def a2
    end
 end
 module B
    def b1
    end
    def b2
    end
 end
 class Sample
 include A
 include B
    def s1
    end
 end
 samp = Sample.new
 samp.a1
 samp.a2
 samp.b1

exampleCodeHeader Example from <a href="typescript.html">TypeScript</a>:

code
 // https://www.typescriptlang.org/docs/handbook/mixins.html
 class SmartObject implements Disposable, Activatable {
 }
 // Note: still need to do some runtime ops to make that work.

exampleCodeHeader Example from <a href="julia.html">Julia</a>:

code
 # Including the same code in different modules provides mixin-like behavior.
 module Normal
 include(&quot;mycode.jl&quot;)
 end
 
 module Testing
 include(&quot;safe_operators.jl&quot;)
 include(&quot;mycode.jl&quot;)
 end

exampleCodeHeader Example from <a href="racket.html">Racket</a>:

code
 (mixin (interface-expr ...) (interface-expr ...)
  class-clause ...)

exampleCodeHeader Example from <a href="xtext.html">Xtext</a>:

code
 grammar org.example.domainmodel.Domainmodel
        with org.eclipse.xtext.common.Terminals



















keyboardNav iterators-feature.html operator-overloading-feature.html
