title DataWeave

import settings.scroll
htmlTitle DataWeave - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/dataweave.pldb

paragraph
 DataWeave is a <a href="../lists/languages.html?filter=pl">programming language</a> created in <a href="../lists/languages.html?filter=2014">2014</a>.

kpiTable
 #1382 <span title="TotalRank: 1869 Jobs: 62 Users: 1047 Facts: 861 Links: 946">on PLDB</span>
 8 Years Old
 200 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging DataWeave">Books</span>
 0 <span title="Academic publications about or leveraging DataWeave">Papers</span>
 1k <span title="DataWeave repos on GitHub.">Repos</span>





paragraph
 DataWeave is the MuleSoft expression language for accessing and transforming data received through a Mule app. DataWeave is tightly integrated with Mule runtime, which runs the scripts and expressions in your Mule app.

list
 - There are at least 1,326 DataWeave repos on <a href="https://github.com/search?q=language:DataWeave">GitHub</a>
 - file extensions for DataWeave include dwl
 - The  Google BigQuery Public Dataset GitHub snapshot shows 9 users using DataWeave in 9 repos on <a href="https://api.github.com/search/repositories?q=language:DataWeave">GitHub</a>
 - GitHub supports <a href="https://github.com/mulesoft-labs/data-weave-tmLanguage" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for DataWeave
 - Read more about DataWeave on the web: <a href="https://docs.mulesoft.com/mule-runtime/4.1/dataweave">1</a>
 - Have a question about DataWeave not answered here? <a href="https://github.com/breck7/pldb/issues/new">Open an issue</a> explaining what you need.
 - <a href="https://edit.pldb.com/edit/dataweave">Edit this page</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/mulesoft-labs/data-weave-tmLanguage'>Linguist</a>:
code
 %dw 2.0
 var number = 1234
 fun foo(func,name=&quot;Mariano&quot;) = func(name)
 input payload application/test arg=&quot;value&quot;
 output application/json
 ---
 {
   foo: &quot;bar&quot;
 }

















keyboardNav alpine-abuild.html jupyter-notebook.html
